{"ast":null,"code":"var _jsxFileName = \"/Users/Clem/Programming/The-Odin-Project/repos/memory-card/src/components/Cardboard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport Card from './Card.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Cardboard = props => {\n  _s();\n\n  const cards = [{\n    image: '一',\n    name: 'いち'\n  }, {\n    image: '二',\n    name: 'に'\n  }, {\n    image: '三',\n    name: 'さん'\n  }, {\n    image: '四',\n    name: 'よん'\n  }, {\n    image: '五',\n    name: 'ご'\n  }, {\n    image: '六',\n    name: 'ろく'\n  }, {\n    image: '七',\n    name: 'なな'\n  }, {\n    image: '八',\n    name: 'はち'\n  }, {\n    image: '九',\n    name: 'く'\n  }, {\n    image: '十',\n    name: 'じゅう'\n  }, {\n    image: '百',\n    name: 'ひゃく'\n  }, {\n    image: '億',\n    name: 'おく'\n  }];\n  const [position, setPosition] = useState(cards.map((item, index) => index));\n\n  const randomizeArray = array => {\n    let randomizedArr = array.slice(0);\n\n    for (let i = 0; i < randomizedArr.length; i++) {\n      const j = Math.floor(Math.random() * randomizedArr.length);\n      [randomizedArr[i], randomizedArr[j]] = [randomizedArr[j], randomizedArr[i]];\n    }\n\n    return randomizedArr;\n  };\n\n  const randomizeCards = () => {\n    setPosition(randomizeArray(position));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    classname: \"cardboard\",\n    children: position.map(place => {\n      return /*#__PURE__*/_jsxDEV(Card, {\n        image: cards[place].image,\n        name: cards[place].name,\n        reset: props.reset,\n        endCurrentStage: props.endCurrentStage,\n        incrementScore: props.incrementScore,\n        randomizeCards: randomizeCards\n      }, cards[place].name, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 6\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Cardboard, \"79waxtWKwBtaiUtLJNJ7jblANRY=\");\n\n_c = Cardboard;\nexport default Cardboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"Cardboard\");","map":{"version":3,"names":["React","useState","useEffect","Card","Cardboard","props","cards","image","name","position","setPosition","map","item","index","randomizeArray","array","randomizedArr","slice","i","length","j","Math","floor","random","randomizeCards","place","reset","endCurrentStage","incrementScore"],"sources":["/Users/Clem/Programming/The-Odin-Project/repos/memory-card/src/components/Cardboard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Card from './Card.js'\n\nconst Cardboard = (props) => {\n\n    const cards = [\n        {image: '一', name: 'いち'},\n        {image: '二', name: 'に'},\n        {image: '三', name: 'さん'},\n        {image: '四', name: 'よん'},\n        {image: '五', name: 'ご'},\n        {image: '六', name: 'ろく'},\n        {image: '七', name: 'なな'},\n        {image: '八', name: 'はち'},\n        {image: '九', name: 'く'},\n        {image: '十', name: 'じゅう'},\n        {image: '百', name: 'ひゃく'},\n        {image: '億', name: 'おく'},\n    ]\n\n    const [position, setPosition] = useState(\n        cards.map((item, index) => index)\n    );\n\n    const randomizeArray = (array) => {\n        let randomizedArr = array.slice(0);\n        for (let i=0; i<randomizedArr.length; i++){\n            const j = Math.floor(Math.random() * randomizedArr.length);\n\t\t\t[randomizedArr[i], randomizedArr[j]] = [\n\t\t\t\trandomizedArr[j],\n\t\t\t\trandomizedArr[i],\n\t\t\t];\n\t\t}\n\t\treturn randomizedArr;\n\t};\n\n    const randomizeCards = () => {\n\t\tsetPosition(randomizeArray(position));\n\t};\n\n    return(\n        <div classname=\"cardboard\">\n            {position.map((place) => {\n\t\t\t\treturn (\n\t\t\t\t\t<Card\n\t\t\t\t\t\tkey={cards[place].name}\n\t\t\t\t\t\timage={cards[place].image}\n\t\t\t\t\t\tname={cards[place].name}\n\t\t\t\t\t\treset={props.reset}\n\t\t\t\t\t\tendCurrentStage={props.endCurrentStage}\n\t\t\t\t\t\tincrementScore={props.incrementScore}\n\t\t\t\t\t\trandomizeCards={randomizeCards}\n\t\t\t\t\t/>\n\t\t\t\t);\n\t\t\t})}\n        </div>\n    )\n}\n\nexport default Cardboard;"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,IAAP,MAAiB,WAAjB;;;AAEA,MAAMC,SAAS,GAAIC,KAAD,IAAW;EAAA;;EAEzB,MAAMC,KAAK,GAAG,CACV;IAACC,KAAK,EAAE,GAAR;IAAaC,IAAI,EAAE;EAAnB,CADU,EAEV;IAACD,KAAK,EAAE,GAAR;IAAaC,IAAI,EAAE;EAAnB,CAFU,EAGV;IAACD,KAAK,EAAE,GAAR;IAAaC,IAAI,EAAE;EAAnB,CAHU,EAIV;IAACD,KAAK,EAAE,GAAR;IAAaC,IAAI,EAAE;EAAnB,CAJU,EAKV;IAACD,KAAK,EAAE,GAAR;IAAaC,IAAI,EAAE;EAAnB,CALU,EAMV;IAACD,KAAK,EAAE,GAAR;IAAaC,IAAI,EAAE;EAAnB,CANU,EAOV;IAACD,KAAK,EAAE,GAAR;IAAaC,IAAI,EAAE;EAAnB,CAPU,EAQV;IAACD,KAAK,EAAE,GAAR;IAAaC,IAAI,EAAE;EAAnB,CARU,EASV;IAACD,KAAK,EAAE,GAAR;IAAaC,IAAI,EAAE;EAAnB,CATU,EAUV;IAACD,KAAK,EAAE,GAAR;IAAaC,IAAI,EAAE;EAAnB,CAVU,EAWV;IAACD,KAAK,EAAE,GAAR;IAAaC,IAAI,EAAE;EAAnB,CAXU,EAYV;IAACD,KAAK,EAAE,GAAR;IAAaC,IAAI,EAAE;EAAnB,CAZU,CAAd;EAeA,MAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BT,QAAQ,CACpCK,KAAK,CAACK,GAAN,CAAU,CAACC,IAAD,EAAOC,KAAP,KAAiBA,KAA3B,CADoC,CAAxC;;EAIA,MAAMC,cAAc,GAAIC,KAAD,IAAW;IAC9B,IAAIC,aAAa,GAAGD,KAAK,CAACE,KAAN,CAAY,CAAZ,CAApB;;IACA,KAAK,IAAIC,CAAC,GAAC,CAAX,EAAcA,CAAC,GAACF,aAAa,CAACG,MAA9B,EAAsCD,CAAC,EAAvC,EAA0C;MACtC,MAAME,CAAC,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBP,aAAa,CAACG,MAAzC,CAAV;MACT,CAACH,aAAa,CAACE,CAAD,CAAd,EAAmBF,aAAa,CAACI,CAAD,CAAhC,IAAuC,CACtCJ,aAAa,CAACI,CAAD,CADyB,EAEtCJ,aAAa,CAACE,CAAD,CAFyB,CAAvC;IAIA;;IACD,OAAOF,aAAP;EACA,CAVE;;EAYA,MAAMQ,cAAc,GAAG,MAAM;IAC/Bd,WAAW,CAACI,cAAc,CAACL,QAAD,CAAf,CAAX;EACA,CAFE;;EAIA,oBACI;IAAK,SAAS,EAAC,WAAf;IAAA,UACKA,QAAQ,CAACE,GAAT,CAAcc,KAAD,IAAW;MACjC,oBACC,QAAC,IAAD;QAEC,KAAK,EAAEnB,KAAK,CAACmB,KAAD,CAAL,CAAalB,KAFrB;QAGC,IAAI,EAAED,KAAK,CAACmB,KAAD,CAAL,CAAajB,IAHpB;QAIC,KAAK,EAAEH,KAAK,CAACqB,KAJd;QAKC,eAAe,EAAErB,KAAK,CAACsB,eALxB;QAMC,cAAc,EAAEtB,KAAK,CAACuB,cANvB;QAOC,cAAc,EAAEJ;MAPjB,GACMlB,KAAK,CAACmB,KAAD,CAAL,CAAajB,IADnB;QAAA;QAAA;QAAA;MAAA,QADD;IAWA,CAZS;EADL;IAAA;IAAA;IAAA;EAAA,QADJ;AAiBH,CAtDD;;GAAMJ,S;;KAAAA,S;AAwDN,eAAeA,SAAf"},"metadata":{},"sourceType":"module"}